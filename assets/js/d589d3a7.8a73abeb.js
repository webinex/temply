"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const l={title:"Getting Started",sidebar_position:2},i="Getting Started",o={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Install Nuget Package",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/temply/docs/getting-started",draft:!1,editUrl:"https://github.com/webinex/asky/tree/main/docs/docs/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Getting Started",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/temply/docs/intro"},next:{title:"Profiles",permalink:"/temply/docs/profiles"}},s={},p=[{value:"Install Nuget Package",id:"install-nuget-package",level:2},{value:"Register Services",id:"register-services",level:2},{value:"Use It!",id:"use-it",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("h2",{id:"install-nuget-package"},"Install Nuget Package"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"dotnet add package Webinex.Temply\n")),(0,a.kt)("h2",{id:"register-services"},"Register Services"),(0,a.kt)("admonition",{title:"Snake Case",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Be careful, Scriban automatically renames properties using snake_case.",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"FirstName")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"firstName")," would be renamed to ",(0,a.kt)("inlineCode",{parentName:"p"},"first_name"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'services\n  .AddTemply(temply => temply\n      .AddProfile(profile => {\n          profile.Add("HelloWorld", "Hello, {{ values.first_name }} {{ values.last_name }}");\n      }));\n')),(0,a.kt)("h2",{id:"use-it"},"Use It!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'public class KeyedTemplyExample\n{\n    private readonly ITemply _temply;\n\n    public async Task PrintHelloAsync()\n    {\n        var values = new { firstName = "John", lastName = "Doe" };\n        var text = await _temply.RenderAsync("HelloWorld", values);\n        Console.WriteLine(text); // Prints: Hello, John Doe\n    }\n}\n\npublic class TextTemplyExample\n{\n    private readonly ITemply _temply;\n\n    public async Task PrintHelloAsync()\n    {\n        var values = new { firstName = "John", lastName = "Doe" };\n        var template = "Hello, {{ values.first_name }} {{ values.last_name }}";\n        var text = await _temply.RenderTextAsync(template, values);\n        Console.WriteLine(text); // Prints: Hello, John Doe\n    }\n}\n')))}d.isMDXComponent=!0}}]);